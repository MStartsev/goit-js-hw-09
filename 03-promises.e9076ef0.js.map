{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SAuBpC,SAASC,EAAcC,EAAUC,EAAOC,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAUR,GAASD,EAAW,GAAKE,EAEzCQ,YAAW,KACLJ,EACFF,EAAQ,C,SAAEJ,EAAUC,MAAOQ,IAE3BJ,EAAO,C,SAAEL,EAAUC,MAAOQ,GAAQ,GAEnCA,EAAA,GAEP,CAlCAb,EAAKe,iBAAiB,UAAUC,IAC9BA,EAAMC,iBAEN,MAAMC,EAAWC,GAAQC,OAAOpB,EAAKmB,GAAME,OAErChB,EAAQa,EAAS,SACjBZ,EAAOY,EAAS,QAChBI,EAASJ,EAAS,UAExB,IAAK,IAAId,EAAW,EAAGA,GAAYkB,EAAQlB,IACzCD,EAAcC,EAAUC,EAAOC,GAC5BiB,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA0B,OAAOC,QAAQ,qBAAqBrB,QAAeC,MAAS,IAG7DqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBP,EAAA0B,OAAOG,QAAQ,oBAAoBvB,QAAeC,MAAS,GAC7D","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const getValue = name => Number(form[name].value);\n\n  const delay = getValue('delay');\n  const step = getValue('step');\n  const amount = getValue('amount');\n\n  for (let position = 1; position <= amount; position++) {\n    createPromise(position, delay, step)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay, step) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const timeout = delay + (position - 1) * step;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay: timeout });\n      } else {\n        reject({ position, delay: timeout });\n      }\n    }, timeout);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","step","Promise","resolve","reject","shouldResolve","Math","random","timeout","setTimeout","addEventListener","event","preventDefault","getValue","name","Number","value","amount","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.e9076ef0.js.map"}